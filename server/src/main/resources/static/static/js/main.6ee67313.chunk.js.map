{"version":3,"sources":["constants/index.js","util/APIUtils.js","post/NewComment.js","util/Colors.js","post/Post.js","util/Helpers.js","common/LoadingIndicator.js","post/PostList.js","post/NewPost.js","user/login/Login.js","user/signup/Signup.js","common/NotFound.js","common/ServerError.js","user/profile/Profile.js","common/AppHeader.js","common/PrivateRoute.js","app/App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","ACCESS_TOKEN","POST_LIST_SIZE","POST_TOPIC_MAX_LENGTH","POST_DESCRIPTION_MAX_LENGTH","POST_COMMENT_MAX_LENGTH","NAME_MIN_LENGTH","NAME_MAX_LENGTH","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","EMAIL_MAX_LENGTH","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","request","options","headers","Headers","Content-Type","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","FormItem","form_default","a","Item","TextArea","NewComment","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateComment","commentText","length","validateStatus","errorMsg","concat","state","hiddeComment","comment","text","hiddeCommentForm","bind","assertThisInitialized","handleCommentChange","isFormInvalid","setState","event","value","target","objectSpread","react_default","createElement","className","commentNumber","onClick","icon_default","type","hidden","onSubmit","handleCommentSubmit","placeholder","style","fontSize","autosize","minRows","maxRows","name","onChange","create-comment-form-Item","button_default","htmlType","size","disabled","Component","colors","getAvatarColor","substr","hash","i","charCodeAt","index","Math","abs","Panel","collapse_default","Post","currentUser","post","createdBy","id","createBy","_this2","commentViews","comments","forEach","push","key","Link","to","username","handleCommentDelete","shouldHideDeleteCommentIcon","row_default","col_default","span","avatar_default","backgroundColor","toUpperCase","dateTimeString","date","Date","monthIndex","getMonth","year","getFullYear","getDate","getHours","getMinutes","formatDateTime","creationDateTime","shouldHideDeletePostIcon","popconfirm_default","title","onConfirm","handlePostDelete","okText","cancelText","href","bordered","defaultActiveKey","header","topic","showArrow","description","src_post_NewComment","currentComment","LoadingIndicator","antIcon","spin","spin_default","indicator","display","textAlign","marginTop","PostList","posts","page","totalElements","totalPages","last","currentComments","isLoading","loadPostList","handleLoadMore","promise","arguments","undefined","method","getUserCreatedPosts","getUserCommentedPosts","getAllPosts","slice","content","Array","fill","catch","error","nextProps","isAuthenticated","postIndex","_this3","preventDefault","history","notification_default","info","message","postId","deleteUserPost","status","handleLogout","_this4","Comment","commentData","body","JSON","stringify","createComment","console","log","commentId","_this5","deleteUserComment","_this6","postViews","src_post_Post","withRouter","NewPost","validateTopic","topicText","validateDescription","descriptionText","handleSubmit","handleTopicChange","handleDescriptionChange","postData","createPost","NewPost_FormItem","help","input_default","NewPost_TextArea","Login","AntWrappedLoginForm","create","LoginForm","onLogin","form","validateFields","err","values","loginRequest","login","setItem","accessToken","getFieldDecorator","Login_FormItem","rules","required","prefix","Signup","validateName","validationStatus","validateEmail","email","RegExp","test","validateUsername","validatePassword","password","handleInputChange","validateUsernameAvailability","validateEmailAvailability","validationFun","inputName","inputValue","defineProperty","signupRequest","signup","success","Signup_FormItem","label","autoComplete","hasFeedback","onBlur","usernameValue","usernameValidation","available","emailValue","emailValidation","NotFound","ServerError","TabPane","tabs_default","Profile","user","loadUserProfile","getUserProfile","notFound","serverError","match","params","src_common_NotFound","src_common_ServerError","dateString","formatDate","joinedAt","animated","tabBarStyle","tab","postCount","src_post_PostList","commentCount","Header","layout_default","AppHeader","handleMenuClick","_ref","onLogout","menuItems","menu_default","ProfileDropdownMenu","mode","selectedKeys","location","pathname","lineHeight","dropdownMenu","Divider","dropdown_default","overlay","trigger","getPopupContainer","document","getElementsByClassName","marginRight","PrivateRoute","component","authenticated","rest","objectWithoutProperties","Route","render","Redirect","from","Content","App","loadCurrentUser","handleLogin","config","placement","top","duration","redirectTo","notificationType","removeItem","src_common_AppHeader","Switch","exact","path","src_post_NewPost","user_login_Login","user_profile_Profile","common_PrivateRoute","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","BrowserRouter","src_app_App","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6ee67313.chunk.js","sourcesContent":["export const API_BASE_URL = 'http://localhost:5000/api';\n//export const API_BASE_URL = '/api';\nexport const ACCESS_TOKEN = 'accessToken';\n\nexport const POST_LIST_SIZE = 30;\nexport const POST_TOPIC_MAX_LENGTH = 140;\nexport const POST_DESCRIPTION_MAX_LENGTH = 1400;\nexport const POST_COMMENT_MAX_LENGTH = 500;\n\nexport const NAME_MIN_LENGTH = 4;\nexport const NAME_MAX_LENGTH = 40;\n\nexport const USERNAME_MIN_LENGTH = 3;\nexport const USERNAME_MAX_LENGTH = 15;\n\nexport const EMAIL_MAX_LENGTH = 40;\n\nexport const PASSWORD_MIN_LENGTH = 6;\nexport const PASSWORD_MAX_LENGTH = 20;\n","import { API_BASE_URL, POST_LIST_SIZE, ACCESS_TOKEN } from '../constants';\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    });\n\n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n        .then(response =>\n            response.json().then(json => {\n                if(!response.ok) {\n                    return Promise.reject(json);\n                }\n                return json;\n            })\n        );\n};\n\nexport function getAllPosts(page, size) {\n    page = page || 0;\n    size = size || POST_LIST_SIZE;\n    return request({\n        url: API_BASE_URL + \"/posts?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function createPost(postData) {\n    return request({\n        url: API_BASE_URL + \"/posts\",\n        method: 'POST',\n        body: JSON.stringify(postData)\n    });\n}\n\nexport function createComment(commentData) {\n    return request({\n        url: API_BASE_URL + \"/posts/\" + commentData.postId + \"/comments\",\n        method: 'POST',\n        body: JSON.stringify(commentData)\n    });\n}\n\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signin\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\nexport function signup(signupRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signup\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\nexport function checkUsernameAvailability(username) {\n    return request({\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n        method: 'GET'\n    });\n}\n\nexport function checkEmailAvailability(email) {\n    return request({\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n        method: 'GET'\n    });\n}\n\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/user/me\",\n        method: 'GET'\n    });\n}\n\nexport function getUserProfile(username) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'GET'\n    });\n}\n\nexport function getUserCreatedPosts(username, page, size) {\n    page = page || 0;\n    size = size || POST_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/users/\" + username + \"/posts?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function getUserCommentedPosts(username, page, size) {\n    page = page || 0;\n    size = size || POST_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/users/\" + username + \"/comments?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function deleteUserComment(postId, commentId) {\n    return request({\n      url: API_BASE_URL + \"/posts/\" + postId + \"/comments/\" + commentId,\n      method: 'DELETE'\n    })\n}\n\nexport function deleteUserPost(postId) {\n  return request({\n    url: API_BASE_URL + \"/posts/\" + postId,\n    method: \"DELETE\"\n  })\n\n}","import React, { Component } from 'react';\nimport { POST_COMMENT_MAX_LENGTH } from '../constants'\nimport { Form, Input, Button, Icon } from 'antd';\nimport './NewComment.css'\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\nclass NewComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hiddeComment:true,\n      comment: {\n        text: ''\n      }\n    };\n    this.hiddeCommentForm = this.hiddeCommentForm.bind(this);\n    this.handleCommentChange = this.handleCommentChange.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n\n  }\n\n  validateComment = (commentText) => {\n    if(commentText.length === 0) {\n      return {\n        validateStatus: 'error',\n        errorMsg: 'Enter your comment!'\n      }\n    } else if (commentText.length > POST_COMMENT_MAX_LENGTH) {\n      return {\n        validateStatus: 'error',\n        errorMsg: `Comment is too long (Maximum ${POST_COMMENT_MAX_LENGTH} characters allowed)`\n      }\n    } else {\n      return {\n        validateStatus: 'success',\n        errorMsg: null\n      }\n    }\n  };\n\n  hiddeCommentForm() {\n    this.setState({\n      hiddeComment: !this.state.hiddeComment\n      }\n    )\n  }\n\n\n  handleCommentChange(event) {\n    const value = event.target.value;\n    this.setState({\n      comment: {\n        text: value,\n        ...this.validateComment(value)\n      }\n    });\n  }\n\n  isFormInvalid() {\n    if(this.state.comment.validateStatus !== 'success') {\n      return true;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"new-comment-container\">\n        <div className=\"new-comment-content\">\n          <span className=\"total-comments\">{this.props.commentNumber} comments</span>\n          <span className=\"separator\">|</span>\n          <span className=\"time-left\"><a className=\"show-comment-form\" onClick={this.hiddeCommentForm}><Icon type=\"edit\" /></a></span>\n          <div className=\"new-comment-form\" hidden={this.state.hiddeComment}>\n            <Form onSubmit={this.props.handleCommentSubmit} className=\"create-comment-form\">\n              <FormItem validateStatus={this.state.comment.validateStatus}\n                        className=\"create-comment-form-Item\">\n                <TextArea\n                  placeholder=\"Enter your comment\"\n                  style = {{ fontSize: '16px' }}\n                  autosize={{ minRows: 3, maxRows: 6 }}\n                  name = \"Comment\"\n                  value={this.state.comment.text}\n                  onChange = {this.handleCommentChange} />\n              </FormItem>\n              <FormItem create-comment-form-Item>\n                  <Button onClick={this.hiddeCommentForm}\n                    htmlType=\"submit\"\n                    type=\"primary\"\n                    size=\"small\"\n                    disabled={this.isFormInvalid()}>\n                    Sumbmit\n                  </Button>\n              </FormItem>\n            </Form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default NewComment;\n","const colors = [\n    '#F44336', '#e91e63', '#9c27b0', '#673ab7',\n    '#ff9800', '#ff5722', '#795548', '#607d8b',\n    '#3f51b5', '#2196F3', '#00bcd4', '#009688',\n    '#2196F3', '#32c787', '#00BCD4', '#ff5652',\n    '#ffc107', '#ff85af', '#FF9800', '#39bbb0',\n    '#4CAF50', '#ffeb3b', '#ffc107',\n];\n\nexport function getAvatarColor(name) {\n    name = name.substr(0, 6);\n\n    var hash = 0;\n    for (var i = 0; i < name.length; i++) {\n        hash = 31 * hash + name.charCodeAt(i);\n    }\n    var index = Math.abs(hash % colors.length);\n    return colors[index];\n}","import React, { Component } from 'react';\nimport './Post.css';\nimport NewComment from './NewComment'\nimport { Avatar, Icon, Row, Col, Collapse, Popconfirm } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { getAvatarColor } from '../util/Colors';\nimport { formatDateTime } from '../util/Helpers';\n\nconst Panel = Collapse.Panel;\n\n\nclass Post extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      hiddeComment: true\n    }\n  }\n\n  shouldHideDeletePostIcon() {\n    if (!this.props.currentUser) {\n      return true;\n    }\n    return this.props.post.createdBy.id !== this.props.currentUser.id;\n  }\n\n  shouldHideDeleteCommentIcon(comment) {\n    if (!this.props.currentUser) {\n      return true;\n    }\n    return comment.createBy.id !== this.props.currentUser.id;\n  }\n\n  render() {\n    const commentViews = [];\n    this.props.post.comments.forEach((comment, index) => {\n      commentViews.push(\n        <div className=\"post-comments-text\" key={comment.id}>\n          <Link className=\"creator-link\" to={`/users/${comment.createBy.username}`}>\n            {comment.createBy.username}:&nbsp;&nbsp;\n          </Link>\n          {comment.text}\n            <a className=\"comment-delete-icon\"\n              onClick={(event) => this.props.handleCommentDelete(event, comment.id)}\n              hidden={this.shouldHideDeleteCommentIcon(comment)}>\n              -\n            </a>\n        </div>\n      )\n    });\n\n    return (\n      <div className=\"post-content\">\n        <div className=\"post-header\">\n          <Row>\n            <Col span={22}>\n            <div className=\"post-creator-info\">\n              <Link className=\"creator-link\" to={`/users/${this.props.post.createdBy.username}`}>\n                <Avatar className=\"post-creator-avatar\"\n                        style={{ backgroundColor: getAvatarColor(this.props.post.createdBy.name)}} >\n                  {this.props.post.createdBy.name[0].toUpperCase()}\n                </Avatar>\n                <span className=\"post-creator-name\">\n                                  {this.props.post.createdBy.name}\n                              </span>\n                <span className=\"post-creator-username\">\n                                  @{this.props.post.createdBy.username}\n                              </span>\n                <span className=\"post-creation-date\">\n                                  {formatDateTime(this.props.post.creationDateTime)}\n                              </span>\n              </Link>\n            </div>\n            </Col>\n            <Col span={2}>\n              <div className=\"delete-post-icon\" hidden={this.shouldHideDeletePostIcon()}>\n                <Popconfirm\n                  title=\"Are you sure delete this post?\"\n                  onConfirm={this.props.handlePostDelete}\n                  okText=\"Yes\"\n                  cancelText=\"No\">\n                  <a href=\"#\"><Icon type=\"close\" /></a>\n                </Popconfirm>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"post-topic\">\n            <Collapse bordered={false} defaultActiveKey={['1']}>\n              <Panel\n                     header={this.props.post.topic}\n                     showArrow={false}\n              >\n                {this.props.post.description}\n              </Panel>\n            </Collapse>\n\n          </div>\n        </div>\n        <div className=\"post-comments\">\n          {commentViews}\n        </div>\n        <div className=\"post-footer\">\n            <NewComment\n              commentNumber = {commentViews.length}\n              currentComment={this.props.currentComment}\n              handleCommentSubmit={this.props.handleCommentSubmit}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Post;","\nexport function formatDate(dateString) {\n    const date = new Date(dateString);\n\n    const monthNames = [\n        \"January\", \"February\", \"March\",\n        \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\",\n        \"November\", \"December\"\n    ];\n\n    const monthIndex = date.getMonth();\n    const year = date.getFullYear();\n\n    return monthNames[monthIndex] + ' ' + year;\n}\n\nexport function formatDateTime(dateTimeString) {\n    const date = new Date(dateTimeString);\n\n    const monthNames = [\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\",\n        \"May\", \"Jun\", \"Jul\", \"Aug\",\n        \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n\n    const monthIndex = date.getMonth();\n    const year = date.getFullYear();\n\n    return date.getDate() + ' ' + monthNames[monthIndex] + ' ' + year + ' - ' + date.getHours() + ':' + date.getMinutes();\n}","import React from 'react';\nimport { Spin, Icon } from 'antd';\n\nexport default function LoadingIndicator(props) {\n    const antIcon = <Icon type=\"loading-3-quarters\" style={{ fontSize: 30 }} spin />;\n    return (\n        <Spin indicator={antIcon} style = {{display: 'block', textAlign: 'center', marginTop: 30}} />\n    );\n}","import React, { Component } from 'react';\nimport { getAllPosts, getUserCreatedPosts, getUserCommentedPosts, deleteUserPost, deleteUserComment} from '../util/APIUtils';\nimport Post from './Post';\nimport { createComment } from '../util/APIUtils';\nimport LoadingIndicator  from '../common/LoadingIndicator';\nimport { Button, Icon, notification } from 'antd';\nimport { POST_LIST_SIZE } from '../constants';\nimport { withRouter } from 'react-router-dom';\nimport './PostList.css';\n\nclass PostList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      page: 0,\n      size: 10,\n      totalElements: 0,\n      totalPages: 0,\n      last: true,\n      currentComments: [],\n      isLoading: false\n    };\n    this.loadPostList = this.loadPostList.bind(this);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n  }\n\n  loadPostList(page = 0, size = POST_LIST_SIZE) {\n    let promise;\n    if(this.props.username) {\n      if(this.props.type === 'USER_CREATED_POSTS') {\n        promise = getUserCreatedPosts(this.props.username, page, size);\n      } else if (this.props.type === 'USER_COMMENTED_POSTS') {\n        promise = getUserCommentedPosts(this.props.username, page, size);\n      }\n    } else {\n      promise = getAllPosts(page, size);\n    }\n\n    if(!promise) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n\n    promise\n      .then(response => {\n        const posts = this.state.posts.slice();\n        const currentComments = this.state.currentComments.slice();\n\n        this.setState({\n          posts: posts.concat(response.content),\n          page: response.page,\n          size: response.size,\n          totalElements: response.totalElements,\n          totalPages: response.totalPages,\n          last: response.last,\n          currentComments: currentComments.concat(Array(response.content.length).fill(null)),\n          isLoading: false\n        });\n      }).catch(error => {\n      this.setState({\n        isLoading: false\n      })\n    });\n\n  }\n\n  componentDidMount() {\n    this.loadPostList();\n  }\n\n  componentDidUpdate(nextProps) {\n    if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\n      this.setState({\n        posts: [],\n        page: 0,\n        size: 10,\n        totalElements: 0,\n        totalPages: 0,\n        last: true,\n        currentComments: [],\n        isLoading: false\n      });\n      this.loadPostList();\n    }\n  }\n\n  handleLoadMore() {\n    this.loadPostList(this.state.page + 1);\n  }\n\n  handlePostDelete(event, postIndex) {\n    event.preventDefault();\n    if(!this.props.isAuthenticated) {\n      this.props.history.push(\"/login\");\n      notification.info({\n        message: 'Posting App',\n        description: \"Please login to comment.\",\n      });\n      return;\n    }\n    const postId = this.state.posts[postIndex].id;\n    deleteUserPost(postId)\n      .then(response=> {\n        let posts = this.state.posts.slice(0, postIndex);\n        posts = posts.concat(this.state.posts.slice(postIndex + 1));\n        this.setState({\n          posts: posts\n        })\n      }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to comment');\n      } else {\n        notification.error({\n          message: 'Posting App',\n          description: error.message || 'Sorry! Something went wrong. Please try again!'\n        });\n      }\n    });\n  }\n\n\n  handleCommentSubmit(event, postIndex) {\n    event.preventDefault();\n    if(!this.props.isAuthenticated) {\n      this.props.history.push(\"/login\");\n      notification.info({\n        message: 'Posting App',\n        description: \"Please login to comment.\",\n      });\n      return;\n    }\n\n    const post = this.state.posts[postIndex];\n    const target = event.target;\n    const comment = target.Comment.value;\n\n    const commentData = {\n      postId: post.id,\n      text: comment\n    };\n\n    createComment(commentData)\n      .then(response => {\n        console.log(response);\n        const posts = this.state.posts.slice();\n        posts[postIndex] = response;\n        this.setState({\n          posts: posts\n        });\n      }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to comment');\n      } else {\n        notification.error({\n          message: 'Posting App',\n          description: error.message || 'Sorry! Something went wrong. Please try again!'\n        });\n      }\n    });\n  }\n\n  handleCommentDelete(event, postIndex, commentId) {\n    event.preventDefault();\n    if (!this.props.isAuthenticated) {\n      this.props.history.push(\"/login\");\n      notification.info({\n        message: 'Posting App',\n        description: \"Please login to comment.\",\n      });\n      return;\n    }\n\n    const post = this.state.posts[postIndex];\n    deleteUserComment(post.id, commentId)\n      .then(response => {\n        const posts = this.state.posts.slice();\n        posts[postIndex] = response;\n        this.setState({\n          posts: posts\n        });\n      }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'You have been logged out. Please login to comment');\n      } else {\n        notification.error({\n          message: 'Posting App',\n          description: error.message || 'Sorry! Something went wrong. Please try again!'\n        });\n      }\n    });\n  }\n\n  render() {\n    const postViews = [];\n    this.state.posts.forEach((post, postIndex) => {\n      postViews.push(<Post\n        key={post.id}\n        post={post}\n        currentUser={this.props.currentUser}\n        handleCommentSubmit={(event) => this.handleCommentSubmit(event, postIndex)}\n        handlePostDelete={(event) => this.handlePostDelete(event, postIndex)}\n        handleCommentDelete={(event, commentId) => this.handleCommentDelete(event, postIndex, commentId)}\n        />)\n    });\n\n    return (\n      <div className=\"posts-container\">\n        {postViews}\n        {\n          !this.state.isLoading && this.state.posts.length === 0 ? (\n            <div className=\"no-posts-found\">\n              <span>No Posts Found.</span>\n            </div>\n          ): null\n        }\n        {\n          !this.state.isLoading && !this.state.last ? (\n            <div className=\"load-more-posts\">\n              <Button type=\"dashed\" onClick={this.handleLoadMore} disabled={this.state.isLoading}>\n                <Icon type=\"plus\" /> Load more\n              </Button>\n            </div>): null\n        }\n        {\n          this.state.isLoading ?\n            <LoadingIndicator />: null\n        }\n      </div>\n    );\n  }\n}\n\nexport default withRouter(PostList);","import React, { Component } from 'react';\nimport { createPost } from '../util/APIUtils';\nimport {POST_TOPIC_MAX_LENGTH, POST_DESCRIPTION_MAX_LENGTH } from '../constants';\nimport './NewPost.css';\nimport { Form, Input, Button, notification } from 'antd';\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topic: {\n        text: ''\n      },\n      description: {\n        text: ''\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTopicChange = this.handleTopicChange.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const postData = {\n      topic: this.state.topic.text,\n      description: this.state.description.text\n    };\n\n    createPost(postData)\n      .then(response => {\n        this.props.history.push(\"/\");\n      }).catch(error => {\n      if(error.status === 401) {\n        this.props.handleLogout('/login', 'error', 'You have been logged out. Please login create post.');\n      } else {\n        notification.error({\n          message: 'posting App',\n          description: error.message || 'Sorry! Something went wrong. Please try again!'\n        });\n      }\n    });\n  }\n\n  validateTopic = (topicText) => {\n    if(topicText.length === 0) {\n      return {\n        validateStatus: 'error',\n        errorMsg: 'Please enter your topic!'\n      }\n    } else if (topicText.length > POST_TOPIC_MAX_LENGTH) {\n      return {\n        validateStatus: 'error',\n        errorMsg: `Topic is too long (Maximum ${POST_TOPIC_MAX_LENGTH} characters allowed)`\n      }\n    } else {\n      return {\n        validateStatus: 'success',\n        errorMsg: null\n      }\n    }\n  };\n\n  handleTopicChange(event) {\n    const value = event.target.value;\n    this.setState({\n      topic: {\n        text: value,\n        ...this.validateTopic(value)\n      }\n    });\n  }\n\n  validateDescription = (descriptionText) => {\n    if (descriptionText.length > POST_DESCRIPTION_MAX_LENGTH) {\n      return {\n        validateStatus: 'error',\n        errorMsg: `Description is too long (Maximum ${POST_DESCRIPTION_MAX_LENGTH} characters allowed)`\n      }\n    } else {\n      return {\n        validateStatus: 'success',\n        errorMsg: null\n      }\n    }\n  };\n\n  handleDescriptionChange(event) {\n    const value = event.target.value;\n    this.setState({\n      description: {\n        text: value,\n        ...this.validateDescription(value)\n      }\n    });\n  }\n\n  isFormInvalid() {\n    if(this.state.topic.validateStatus !== 'success') {\n      return true;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"new-post-container\">\n        <h1 className=\"page-title\">Create post</h1>\n        <div className=\"new-post-content\">\n          <Form onSubmit={this.handleSubmit} className=\"create-post-form\">\n            <FormItem validateStatus={this.state.topic.validateStatus}\n            help={this.state.topic.errorMsg} className=\"post-form-row\">\n              <Input\n                placeholder=\"Enter your topic\"\n                style = {{ fontSize: '16px' }}\n                size = \"large\"\n                name = \"topic\"\n                value={this.state.topic.text}\n                onChange={this.handleTopicChange}\n              />\n            </FormItem>\n            <FormItem validateStatus={this.state.description.validateStatus}\n                      help={this.state.description.errorMsg} className=\"post-form-row\">\n                        <TextArea\n                          placeholder=\"Enter your description\"\n                          style = {{ fontSize: '16px' }}\n                          autosize={{ minRows: 5, maxRows: 8 }}\n                          name = \"description\"\n                          value = {this.state.description.text}\n                          onChange = {this.handleDescriptionChange} />\n            </FormItem>\n            <FormItem className=\"post-form-row\">\n              <Button type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      disabled={this.isFormInvalid()}\n                      className=\"create-post-form-button\">Create post</Button>\n            </FormItem>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default NewPost;","import React, { Component } from 'react';\nimport { login } from '../../util/APIUtils';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport { ACCESS_TOKEN } from '../../constants';\n\nimport { Form, Input, Button, Icon, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(LoginForm);\n        return (\n            <div className=\"login-container\">\n                <h1 className=\"page-title\">Login</h1>\n                <div className=\"login-content\">\n                    <AntWrappedLoginForm onLogin={this.props.onLogin} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();   \n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const loginRequest = Object.assign({}, values);\n                login(loginRequest)\n                .then(response => {\n                    localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                    this.props.onLogin();\n                }).catch(error => {\n                    if(error.status === 401) {\n                        notification.error({\n                            message: 'Posting App',\n                            description: 'Your Username or Password is incorrect. Please try again!'\n                        });                    \n                    } else {\n                        notification.error({\n                            message: 'Posting App',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });                                            \n                    }\n                });\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <FormItem>\n                    {getFieldDecorator('usernameOrEmail', {\n                        rules: [{ required: true, message: 'Please input your username or email!' }],\n                    })(\n                    <Input \n                        prefix={<Icon type=\"user\" />}\n                        size=\"large\"\n                        name=\"usernameOrEmail\" \n                        placeholder=\"Username or Email\" />    \n                    )}\n                </FormItem>\n                <FormItem>\n                {getFieldDecorator('password', {\n                    rules: [{ required: true, message: 'Please input your Password!' }],\n                })(\n                    <Input \n                        prefix={<Icon type=\"lock\" />}\n                        size=\"large\"\n                        name=\"password\" \n                        type=\"password\" \n                        placeholder=\"Password\"  />                        \n                )}\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Login</Button>\n                    Or <Link to=\"/signup\">register now!</Link>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\n\nexport default Login;","import React, { Component } from 'react';\nimport { signup, checkUsernameAvailability, checkEmailAvailability } from '../../util/APIUtils';\nimport './Signup.css';\nimport { Link } from 'react-router-dom';\nimport { \n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, \n    USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH,\n    EMAIL_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH\n} from '../../constants';\n\nimport { Form, Input, Button, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: {\n                value: ''\n            },\n            username: {\n                value: ''\n            },\n            email: {\n                value: ''\n            },\n            password: {\n                value: ''\n            }\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\n        this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n    }\n\n    handleInputChange(event, validationFun) {\n        const target = event.target;\n        const inputName = target.name;        \n        const inputValue = target.value;\n\n        this.setState({\n            [inputName] : {\n                value: inputValue,\n                ...validationFun(inputValue)\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    \n        const signupRequest = {\n            name: this.state.name.value,\n            email: this.state.email.value,\n            username: this.state.username.value,\n            password: this.state.password.value\n        };\n        signup(signupRequest)\n        .then(response => {\n            notification.success({\n                message: 'Posting App',\n                description: \"Thank you! You're successfully registered. Please Login to continue!\",\n            });          \n            this.props.history.push(\"/login\");\n        }).catch(error => {\n            notification.error({\n                message: 'Posting App',\n                description: error.message || 'Sorry! Something went wrong. Please try again!'\n            });\n        });\n    }\n\n    isFormInvalid() {\n        return !(this.state.name.validateStatus === 'success' &&\n            this.state.username.validateStatus === 'success' &&\n            this.state.email.validateStatus === 'success' &&\n            this.state.password.validateStatus === 'success'\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"signup-container\">\n                <h1 className=\"page-title\">Sign Up</h1>\n                <div className=\"signup-content\">\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\n                        <FormItem \n                            label=\"Full Name\"\n                            validateStatus={this.state.name.validateStatus}\n                            help={this.state.name.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"name\"\n                                autoComplete=\"off\"\n                                placeholder=\"Your full name\"\n                                value={this.state.name.value} \n                                onChange={(event) => this.handleInputChange(event, this.validateName)} />    \n                        </FormItem>\n                        <FormItem label=\"Username\"\n                            hasFeedback\n                            validateStatus={this.state.username.validateStatus}\n                            help={this.state.username.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"username\" \n                                autoComplete=\"off\"\n                                placeholder=\"A unique username\"\n                                value={this.state.username.value} \n                                onBlur={this.validateUsernameAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateUsername)} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Email\"\n                            hasFeedback\n                            validateStatus={this.state.email.validateStatus}\n                            help={this.state.email.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"email\" \n                                type=\"email\" \n                                autoComplete=\"off\"\n                                placeholder=\"Your email\"\n                                value={this.state.email.value} \n                                onBlur={this.validateEmailAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateEmail)} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Password\"\n                            validateStatus={this.state.password.validateStatus}\n                            help={this.state.password.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"password\" \n                                type=\"password\"\n                                autoComplete=\"off\"\n                                placeholder=\"A password between 6 to 20 characters\" \n                                value={this.state.password.value} \n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" \n                                htmlType=\"submit\" \n                                size=\"large\" \n                                className=\"signup-form-button\"\n                                disabled={this.isFormInvalid()}>Sign up</Button>\n                            Already registed? <Link to=\"/login\">Login now!</Link>\n                        </FormItem>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n\n    // Validation Functions\n\n    validateName = (name) => {\n        if(name.length < NAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\n            }\n        } else if (name.length > NAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n              };            \n        }\n    }\n\n    validateEmail = (email) => {\n        if(!email) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email may not be empty'                \n            }\n        }\n\n        const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\n        if(!EMAIL_REGEX.test(email)) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email not valid'\n            }\n        }\n\n        if(email.length > EMAIL_MAX_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\n            }\n        }\n\n        return {\n            validateStatus: null,\n            errorMsg: null\n        }\n    }\n\n    validateUsername = (username) => {\n        if(username.length < USERNAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Username is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\n            }\n        } else if (username.length > USERNAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Username is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: null,\n                errorMsg: null\n            }\n        }\n    }\n\n    validateUsernameAvailability() {\n        // First check for client side errors in username\n        const usernameValue = this.state.username.value;\n        const usernameValidation = this.validateUsername(usernameValue);\n\n        if(usernameValidation.validateStatus === 'error') {\n            this.setState({\n                username: {\n                    value: usernameValue,\n                    ...usernameValidation\n                }\n            });\n            return;\n        }\n\n        this.setState({\n            username: {\n                value: usernameValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkUsernameAvailability(usernameValue)\n        .then(response => {\n            if(response.available) {\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            } else {\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        validateStatus: 'error',\n                        errorMsg: 'This username is already taken'\n                    }\n                });\n            }\n        }).catch(error => {\n            // Marking validateStatus as success, Form will be recchecked at server\n            this.setState({\n                username: {\n                    value: usernameValue,\n                    validateStatus: 'success',\n                    errorMsg: null\n                }\n            });\n        });\n    }\n\n    validateEmailAvailability() {\n        // First check for client side errors in email\n        const emailValue = this.state.email.value;\n        const emailValidation = this.validateEmail(emailValue);\n\n        if(emailValidation.validateStatus === 'error') {\n            this.setState({\n                email: {\n                    value: emailValue,\n                    ...emailValidation\n                }\n            });    \n            return;\n        }\n\n        this.setState({\n            email: {\n                value: emailValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkEmailAvailability(emailValue)\n        .then(response => {\n            if(response.available) {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            } else {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'error',\n                        errorMsg: 'This Email is already registered'\n                    }\n                });\n            }\n        }).catch(error => {\n            // Marking validateStatus as success, Form will be recchecked at server\n            this.setState({\n                email: {\n                    value: emailValue,\n                    validateStatus: 'success',\n                    errorMsg: null\n                }\n            });\n        });\n    }\n\n    validatePassword = (password) => {\n        if(password.length < PASSWORD_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\n            }\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };            \n        }\n    }\n\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div className=\"page-not-found\">\n                <h1 className=\"title\">\n                    404\n                </h1>\n                <div className=\"desc\">\n                    The Page you're looking for was not found.\n                </div>\n                <Link to=\"/\"><Button className=\"go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import React, { Component } from 'react';\nimport './ServerError.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass ServerError extends Component {\n    render() {\n        return (\n            <div className=\"server-error-page\">\n                <h1 className=\"server-error-title\">\n                    500\n                </h1>\n                <div className=\"server-error-desc\">\n                    Oops! Something went wrong at our Server. Why don't you go back?\n                </div>\n                <Link to=\"/\"><Button className=\"server-error-go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\n\nexport default ServerError;","import React, { Component } from 'react';\nimport PostList from '../../post/PostList';\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar, Tabs } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\nimport { formatDate } from '../../util/Helpers';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\n\nconst TabPane = Tabs.TabPane;\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        };\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n\n        getUserProfile(username)\n        .then(response => {\n            this.setState({\n                user: response,\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });        \n            }\n        });        \n    }\n      \n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }        \n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n\n        const tabBarStyle = {\n            textAlign: 'center'\n        };\n\n        return (\n            <div className=\"profile\">\n                { \n                    this.state.user ? (\n                        <div className=\"user-profile\">\n                            <div className=\"user-details\">\n                                <div className=\"user-avatar\">\n                                    <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n                                        {this.state.user.name[0].toUpperCase()}\n                                    </Avatar>\n                                </div>\n                                <div className=\"user-summary\">\n                                    <div className=\"full-name\">{this.state.user.name}</div>\n                                    <div className=\"username\">@{this.state.user.username}</div>\n                                    <div className=\"user-joined\">\n                                        Joined {formatDate(this.state.user.joinedAt)}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"user-post-details\">\n                                <Tabs defaultActiveKey=\"1\" \n                                    animated={false}\n                                    tabBarStyle={tabBarStyle}\n                                    size=\"large\"\n                                    className=\"profile-tabs\">\n                                    <TabPane tab={`${this.state.user.postCount} Posts`} key=\"1\">\n                                        <PostList username={this.props.match.params.username}\n                                                  type=\"USER_CREATED_POSTS\"\n                                                  isAuthenticated={this.props.isAuthenticated}\n                                                  currentUser={this.props.currentUser}\n                                        />\n                                    </TabPane>\n                                    <TabPane tab={`${this.state.user.commentCount} Comments`}  key=\"2\">\n                                        <PostList username={this.props.match.params.username}\n                                                  type=\"USER_COMMENTED_POSTS\"\n                                                  isAuthenticated={this.props.isAuthenticated}\n                                                  currentUser={this.props.currentUser}\n                                        />\n                                    </TabPane>\n                                </Tabs>\n                            </div>  \n                        </div>  \n                    ): null               \n                }\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\nimport './AppHeader.css';\nimport { Layout, Menu, Dropdown, Icon } from 'antd';\nconst Header = Layout.Header;\n    \nclass AppHeader extends Component {\n    constructor(props) {\n        super(props);   \n        this.handleMenuClick = this.handleMenuClick.bind(this);   \n    }\n\n    handleMenuClick({ key }) {\n      if(key === \"logout\") {\n        this.props.onLogout();\n      }\n    }\n\n    render() {\n        let menuItems;\n        if(this.props.currentUser) {\n          menuItems = [\n            <Menu.Item key=\"/\">\n              <Link to=\"/\">\n                <Icon type=\"home\" className=\"nav-icon\" />\n              </Link>\n            </Menu.Item>,\n            <Menu.Item key=\"/post/new\">\n            <Link to=\"/post/new\">\n              <Icon type=\"plus\" className=\"nav-icon\"/>\n            </Link>\n          </Menu.Item>,\n          <Menu.Item key=\"/profile\" className=\"profile-menu\">\n                <ProfileDropdownMenu \n                  currentUser={this.props.currentUser} \n                  handleMenuClick={this.handleMenuClick}/>\n            </Menu.Item>\n          ]; \n        } else {\n          menuItems = [\n            <Menu.Item key=\"/login\">\n              <Link to=\"/login\">Login</Link>\n            </Menu.Item>,\n            <Menu.Item key=\"/signup\">\n              <Link to=\"/signup\">Signup</Link>\n            </Menu.Item>                  \n          ];\n        }\n\n        return (\n            <Header className=\"app-header\">\n            <div className=\"container\">\n              <div className=\"app-title\" >\n                <Link to=\"/\">Posting App</Link>\n              </div>\n              <Menu\n                className=\"app-menu\"\n                mode=\"horizontal\"\n                selectedKeys={[this.props.location.pathname]}\n                style={{ lineHeight: '64px' }} >\n                  {menuItems}\n              </Menu>\n            </div>\n          </Header>\n        );\n    }\n}\n\nfunction ProfileDropdownMenu(props) {\n  const dropdownMenu = (\n    <Menu onClick={props.handleMenuClick} className=\"profile-dropdown-menu\">\n      <Menu.Item key=\"user-info\" className=\"dropdown-item\" disabled>\n        <div className=\"user-full-name-info\">\n          {props.currentUser.name}\n        </div>\n        <div className=\"username-info\">\n          @{props.currentUser.username}\n        </div>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"profile\" className=\"dropdown-item\">\n        <Link to={`/users/${props.currentUser.username}`}>Profile</Link>\n      </Menu.Item>\n      <Menu.Item key=\"logout\" className=\"dropdown-item\">\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown \n      overlay={dropdownMenu} \n      trigger={['click']}\n      getPopupContainer = { () => document.getElementsByClassName('profile-menu')[0]}>\n      <a className=\"ant-dropdown-link\">\n         <Icon type=\"user\" className=\"nav-icon\" style={{marginRight: 0}} /> <Icon type=\"down\" />\n      </a>\n    </Dropdown>\n  );\n}\n\n\nexport default withRouter(AppHeader);","import React from 'react';\nimport {\n    Route,\n    Redirect\n  } from \"react-router-dom\";\n  \n  \nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated ? (\n          <Component {...rest} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n);\n  \nexport default PrivateRoute","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  Route,\n  withRouter,\n  Switch\n} from 'react-router-dom';\n\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\n\nimport PostList from '../post/PostList';\nimport NewPost from '../post/NewPost';\nimport Login from '../user/login/Login';\nimport Signup from '../user/signup/Signup';\nimport Profile from '../user/profile/Profile';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport PrivateRoute from '../common/PrivateRoute';\n\nimport { Layout, notification } from 'antd';\nconst { Content } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n    });\n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n      .then(response => {\n        this.setState({\n          currentUser: response,\n          isAuthenticated: true,\n          isLoading: false\n        });\n      }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    this.props.history.push(redirectTo);\n\n    notification[notificationType]({\n      message: 'Polling App',\n      description: description,\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Polling App',\n      description: \"You're successfully logged in.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingIndicator/>\n    }\n    return (\n      <Layout className=\"app-container\">\n        <AppHeader isAuthenticated={this.state.isAuthenticated}\n                   currentUser={this.state.currentUser}\n                   onLogout={this.handleLogout} />\n\n        <Content className=\"app-content\">\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\"\n                     render={(props) => <PostList isAuthenticated={this.state.isAuthenticated}\n                                                  currentUser={this.state.currentUser} handleLogout={this.handleLogout} {...props} />}>\n              </Route>\n              <Route path=\"/post/new\"\n                     render={(props) => <NewPost isAuthenticated={this.state.isAuthenticated}\n                                              currentUser={this.state.currentUser} handleLogout={this.handleLogout} {...props} />}>\n              </Route>\n              <Route path=\"/login\"\n                     render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n              <Route path=\"/signup\" component={Signup}></Route>\n              <Route path=\"/users/:username\"\n                     render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}>\n              </Route>\n              <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/post/new\" component={NewPost} handleLogout={this.handleLogout}></PrivateRoute>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}